{
  "api": {
    "name": "MixpanelPlugin",
    "slug": "mixpanelplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "initialize",
        "signature": "(options: InitializeOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "InitializeOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "platforms",
            "text": "web"
          }
        ],
        "docs": "Initialize the plugin (web only)",
        "complexTypes": [
          "InitializeOptions"
        ],
        "slug": "initialize"
      },
      {
        "name": "distinctId",
        "signature": "() => Promise<{ value: string; }>",
        "parameters": [],
        "returns": "Promise<{ value: string; }>",
        "tags": [
          {
            "name": "platforms",
            "text": "ios, android, web"
          }
        ],
        "docs": "Returns the current distinct id of the user. This is either the id automatically generated by the library or the id that has been passed by a call to identify().",
        "complexTypes": [],
        "slug": "distinctid"
      },
      {
        "name": "track",
        "signature": "(options: TrackOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "TrackOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "platforms",
            "text": "ios, android, web"
          }
        ],
        "docs": "Tracks an event with properties. Properties are optional and can be added only if needed.",
        "complexTypes": [
          "TrackOptions"
        ],
        "slug": "track"
      },
      {
        "name": "identify",
        "signature": "(options: IdentifyOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "IdentifyOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "platforms",
            "text": "ios, android, web"
          }
        ],
        "docs": "Identify a user with a unique ID to track user activity across devices, tie a user to their events, and create a user profile. If you never call this method, unique visitors are tracked using a UUID generated the first time they visit the site.",
        "complexTypes": [
          "IdentifyOptions"
        ],
        "slug": "identify"
      },
      {
        "name": "alias",
        "signature": "(options: AliasOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "AliasOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "platforms",
            "text": "ios, android, web"
          }
        ],
        "docs": "The alias method creates an alias which Mixpanel will use to remap one id to another. Multiple aliases can point to the same identifier.",
        "complexTypes": [
          "AliasOptions"
        ],
        "slug": "alias"
      },
      {
        "name": "reset",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "platforms",
            "text": "ios, android, web"
          }
        ],
        "docs": "Clears super properties and generates a new random distinct_id for this instance. Useful for clearing data when a user logs out.",
        "complexTypes": [],
        "slug": "reset"
      },
      {
        "name": "clearSuperProperties",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "platforms",
            "text": "ios, android, web"
          }
        ],
        "docs": "Clears all currently set super properties.",
        "complexTypes": [],
        "slug": "clearsuperproperties"
      },
      {
        "name": "currentSuperProperties",
        "signature": "() => Promise<{ properties: any; }>",
        "parameters": [],
        "returns": "Promise<{ properties: any; }>",
        "tags": [
          {
            "name": "platforms",
            "text": "ios, android, web"
          }
        ],
        "docs": "Returns the currently set super properties.",
        "complexTypes": [],
        "slug": "currentsuperproperties"
      },
      {
        "name": "registerSuperProperties",
        "signature": "(options: SuperPropertyOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "SuperPropertyOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "platforms",
            "text": "ios, android, web"
          }
        ],
        "docs": "Register super properties that will be sent with every event.",
        "complexTypes": [
          "SuperPropertyOptions"
        ],
        "slug": "registersuperproperties"
      },
      {
        "name": "setProfile",
        "signature": "(options: ProfileProperties) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "ProfileProperties"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "platforms",
            "text": "ios, android, web"
          }
        ],
        "docs": "Set properties on the current user in Mixpanel People.",
        "complexTypes": [
          "ProfileProperties"
        ],
        "slug": "setprofile"
      },
      {
        "name": "setProfileUnion",
        "signature": "(options: ProfileProperties) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "ProfileProperties"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "platforms",
            "text": "ios, android, web"
          }
        ],
        "docs": "Union list properties.",
        "complexTypes": [
          "ProfileProperties"
        ],
        "slug": "setprofileunion"
      },
      {
        "name": "deleteProfile",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "platforms",
            "text": "ios, android, web"
          }
        ],
        "docs": "Permanently deletes the current people analytics profile from Mixpanel (using the current distinctId).",
        "complexTypes": [],
        "slug": "deleteprofile"
      },
      {
        "name": "trackCharge",
        "signature": "(options: ChargeOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "ChargeOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "platforms",
            "text": "ios, android, web"
          }
        ],
        "docs": "Track money spent by the current user for revenue analytics and associate properties with the charge. Properties is optional.",
        "complexTypes": [
          "ChargeOptions"
        ],
        "slug": "trackcharge"
      },
      {
        "name": "flush",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "platforms",
            "text": "ios, android"
          }
        ],
        "docs": "Uploads queued data to the Mixpanel server. (only ios, android)",
        "complexTypes": [],
        "slug": "flush"
      },
      {
        "name": "optInTracking",
        "signature": "(options: OptInOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "OptInOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "platforms",
            "text": "ios, android, web"
          }
        ],
        "docs": "Opt in tracking.\n\nUse this method to opt in an already opted out user from tracking. People updates and track calls will be sent to Mixpanel after using this method.",
        "complexTypes": [
          "OptInOptions"
        ],
        "slug": "optintracking"
      },
      {
        "name": "optOutTracking",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "platforms",
            "text": "ios, android, web"
          }
        ],
        "docs": "Opt out tracking.\n\nThis method is used to opt out tracking. This causes all events and people request no longer to be sent back to the Mixpanel server.",
        "complexTypes": [],
        "slug": "optouttracking"
      },
      {
        "name": "hasOptedOutTracking",
        "signature": "() => Promise<{ value: boolean; }>",
        "parameters": [],
        "returns": "Promise<{ value: boolean; }>",
        "tags": [
          {
            "name": "platforms",
            "text": "ios, android, web"
          }
        ],
        "docs": "Returns the current opt-out status.",
        "complexTypes": [],
        "slug": "hasoptedouttracking"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "InitializeOptions",
      "slug": "initializeoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "token",
          "tags": [
            {
              "name": "required"
            }
          ],
          "docs": "Your Mixpanel API token",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "autotrack",
          "tags": [
            {
              "text": "true",
              "name": "default"
            }
          ],
          "docs": "Enable or disable autotracking",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "optOutByDefault",
          "tags": [
            {
              "text": "false",
              "name": "default"
            }
          ],
          "docs": "Opting users out of tracking by this Mixpanel instance by default",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "debug",
          "tags": [
            {
              "text": "false",
              "name": "default"
            }
          ],
          "docs": "Enable or disable debug mode",
          "complexTypes": [],
          "type": "boolean | undefined"
        }
      ]
    },
    {
      "name": "TrackOptions",
      "slug": "trackoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "event",
          "tags": [
            {
              "name": "required"
            }
          ],
          "docs": "The name of the event. This can be anything the user does - 'Button Click', 'Sign Up', 'Item Purchased', etc.",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "properties",
          "tags": [
            {
              "text": "{}",
              "name": "default"
            }
          ],
          "docs": "A set of properties to include with the event you're sending. These describe the user who did the event or details about the event itself.",
          "complexTypes": [
            "TrackProperties"
          ],
          "type": "TrackProperties"
        }
      ]
    },
    {
      "name": "TrackProperties",
      "slug": "trackproperties",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": []
    },
    {
      "name": "IdentifyOptions",
      "slug": "identifyoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "distinctId",
          "tags": [],
          "docs": "A string that uniquely identifies a user. If not provided, the distinct_id currently in the persistent store (cookie or localStorage) will be used.",
          "complexTypes": [],
          "type": "string | undefined"
        }
      ]
    },
    {
      "name": "AliasOptions",
      "slug": "aliasoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "alias",
          "tags": [
            {
              "name": "required"
            }
          ],
          "docs": "A unique identifier that you want to use for this user in the future.",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "distinctId",
          "tags": [],
          "docs": "The current identifier being used for this user.",
          "complexTypes": [],
          "type": "string | undefined"
        }
      ]
    },
    {
      "name": "SuperPropertyOptions",
      "slug": "superpropertyoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "properties",
          "tags": [
            {
              "name": "required"
            }
          ],
          "docs": "An associative array of properties to store about the user",
          "complexTypes": [],
          "type": "any"
        }
      ]
    },
    {
      "name": "ProfileProperties",
      "slug": "profileproperties",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "properties",
          "tags": [
            {
              "name": "required"
            }
          ],
          "docs": "An associative array of properties to store about the user",
          "complexTypes": [],
          "type": "any"
        }
      ]
    },
    {
      "name": "ChargeOptions",
      "slug": "chargeoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "amount",
          "tags": [
            {
              "name": "required"
            }
          ],
          "docs": "The amount of the transaction",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "properties",
          "tags": [
            {
              "text": "{}",
              "name": "default"
            }
          ],
          "docs": "An associative array of properties to store about the transaction",
          "complexTypes": [],
          "type": "any"
        }
      ]
    },
    {
      "name": "OptInOptions",
      "slug": "optinoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "distinctId",
          "tags": [],
          "docs": "String that uniquely identifies the current user.",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "properties",
          "tags": [],
          "docs": "An associative array of properties to store about the user",
          "complexTypes": [],
          "type": "any"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [],
  "pluginConfigs": [
    {
      "name": "Mixpanel",
      "slug": "mixpanel",
      "properties": [
        {
          "name": "token",
          "tags": [
            {
              "name": "required"
            },
            {
              "text": "\"asdf1234asdf1234\"",
              "name": "example"
            }
          ],
          "docs": "Mixpanel Token",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "trackAutomaticEvents",
          "tags": [
            {
              "text": "true",
              "name": "default"
            }
          ],
          "docs": "Optional. Whether or not to collect common mobile events. Default is true.",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "optOutTrackingByDefault",
          "tags": [
            {
              "name": "required"
            },
            {
              "text": "false",
              "name": "default"
            }
          ],
          "docs": "Optional. Whether or not Mixpanel can start tracking immediately. Default is false.",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "disableIosIpCollection",
          "tags": [
            {
              "name": "required"
            },
            {
              "text": "false",
              "name": "default"
            }
          ],
          "docs": "Optional. Disables ip collection on iOS devices. Default is false.\nFor Android, this is done via a meta-data property. See {@link https://help.mixpanel.com/hc/en-us/articles/115004494803}",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "serverURL",
          "tags": [
            {
              "text": "\"https://api.mixpanel.com\"",
              "name": "default"
            },
            {
              "text": "\"https://api-eu.mixpanel.com/\"",
              "name": "example"
            }
          ],
          "docs": "Optional. Mixpanel cluster URL or EU server URL. Defaults to US server.",
          "complexTypes": [],
          "type": "string | undefined"
        }
      ],
      "docs": ""
    }
  ]
}